#!/bin/bash
RUNDIR="$HOME/.config/getip"
PUBLIC_HIST="$RUNDIR/public_ip_history"
PRIVATE_HIST="$RUNDIR/private_ip_history"
TMP_PUBLIC_IP="$RUNDIR/tmp_public_ip"
VERSION="1.3.1"

function help {
cat << HERE_DOC
getip $VERSION
  Usage:
    getip <domain> [<action>]
    getip [option]

  'getip' gives your current private or public IP which is using your host

  domain:
     public|external:    public IP assigned by your ISP to your modem for internet connection
     private|local:      private IP in your local network

  action:
    -l --list    used after 'public' or 'private' will show the historic results saved in  ~/.config/getip
    -r --record  used after 'public' or 'private', you will record the result in a file saved in ~/.config/getip

    option:
    help -h --help:   Shows help and exit
    -v --version:     Shows version and exit

*****************************

 Version 1.1 (12-sep-2016): - Added help message
                            - Added default option showing both private, public IPs
 Version 1.2 (13-nov-2016): - Merged functionallity of 'record_public_ip' script into 'getip'
                            - Removed 'record_public_ip' script
                            - Added option of saving private IPs too
                            - Implemented a stronger method of get internal IP
 Version 1.2.1 (02-dic-16)  - Help message improved
                            - Added long and short option strings for all functions
 Version 1.3 (22-ene-17)    - Created Makefile for easy installation
                            - Created bash-completion script
                            - Added option to show version
 Version 1.3.1 (09-sep-18)  - Added alternative names for local & external domains
                            - Corrected bug: everything matched in external case, not possible to access help or version cases
                            - Added last case for unmatched command

  Carlos Molina 2018 (cmolina.ord@gmail.com)
  https://github.com/cmolinaord/getip
HERE_DOC
}
function short_help {
cat << HERE_DOC
getip $VERSION
  Usage:
    getip <(public||external | private||local )> [[-r|--record]|[-l|--list]]
    getip [-h|--help] [-v|--version]

  Carlos Molina 2018 (cmolina.ord@gmail.com)
  https://github.com/cmolinaord/getip
HERE_DOC
}

function create_public_file {
	mkdir -p $RUNDIR
	if [[ ! -f $PUBLIC_HIST ]]; then
		echo -e "date\ttime\tIP\t\tCity\t\t\t\tRegion\t\tCountry\tCoordinates" >> $PUBLIC_HIST
		echo -e "*****\t*****\t***\t\t*****\t\t\t\t*******\t\t********\t**************" >> $PUBLIC_HIST
	fi
}
function create_private_file {
	mkdir -p $RUNDIR
	if [[ ! -f $PRIVATE_HIST ]]; then
		echo -e "date\ttime\tIP" >> $PRIVATE_HIST
		echo -e "*****\t*****\t***" >> $PRIVATE_HIST
fi
}

if [[ $# = 0 ]]; then short_help; exit; fi

if [[ $1 = "private" || $1 = "local" ]]; then
ip_string=`ifconfig | grep -A1 'UP.*BROADCAST.*RUNNING'|grep "inet"|sed 's/^ *//'`
# The ip_string contains "inet 192.168... netmask 255.255.255.0 broadcast 192...."
ip=`echo $ip_string | cut -d" " -f2`
# Get local network IP
	if [[ $2 = "-r" || $2 = "--record" ]]; then
		text="`date +"%Y%m%d %H%M"`\t$ip"
		create_private_file
		echo -e $text >> $PRIVATE_HIST
		echo -e "  $ip saved in $PRIVATE_HIST"
	elif [[ $2 = "-l" || $2 = "--list" ]]; then
		if [[ -f $PRIVATE_HIST ]]; then
			echo -e "Listing saved IP's in $PRIVATE_HIST\n"
			cat $PRIVATE_HIST
		else
			echo "Nothing to list"
		fi
	else
		echo -e "$ip"
	fi
elif [[ $1 = "public" || $1 = "external" ]]; then
	#Get publib IP
	mkdir -p $RUNDIR
	wget http://ipinfo.io/ -qO - > $TMP_PUBLIC_IP
	cat $TMP_PUBLIC_IP |sed 's/{//'|sed 's/}//' | sed 's/^ //' > $TMP_PUBLIC_IP
	if [[ $2 = "-r" || $2 = "--record" ]]; then
		create_public_file
		ip=`wget http://ipinfo.io/ip -qO -`
		city=`cat $TMP_PUBLIC_IP |grep "city"|cut -d'"' -f4`
		region=`cat $TMP_PUBLIC_IP  |grep "region"|cut -d'"' -f4`
		country=`cat $TMP_PUBLIC_IP  |grep "country"|cut -d'"' -f4`
		loc=`cat $TMP_PUBLIC_IP  |grep "loc"|cut -d'"' -f4`
		text="`date +"%Y%m%d %H%M"`\t$ip\t$city\t$region\t$country\t$loc"
		echo -e $text >> $PUBLIC_HIST
		echo "  $ip saved in $PUBLIC_HIST"
	elif [[ $2 = "-l" || $2 = "--list" ]]; then
		if [[ -f $PUBLIC_HIST ]];then
			echo -e "Listing saved IP's in $PUBLIC_HIST\n"
			cat $PUBLIC_HIST
		else
			echo "Nothing to list"
		fi
	else
		wget http://ipinfo.io/ip -qO -
	fi
elif [[ $1 = "help" || $1 = "-h" || $1 = "--help" ]]; then
	help
	exit
elif [[ $1 = "-v" || $1 = "--version" ]]; then
	echo $VERSION
else
	echo "Not valid command: $1"
	echo "Please read the help:"
	short_help
fi
